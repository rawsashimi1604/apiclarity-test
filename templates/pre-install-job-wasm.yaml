{{- if .Values.trafficSource.envoyWasm.enabled }}
{{- if .Values.trafficSource.envoyWasm.enableIstioVerify }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "apiclarity.name" . }}-istio-pre-install-job
  labels:
    {{ include "apiclarity.labels" . }}
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "apiclarity.name" . }}-istio-pre-install-job
  namespace: '{{ .Release.Namespace }}'
  labels:
    {{ include "apiclarity.labels" . }}
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "apiclarity.name" . }}-istio-pre-install-job
  labels:
    {{ include "apiclarity.labels" . }}
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "apiclarity.name" . }}-istio-pre-install-job
subjects:
  - kind: ServiceAccount
    name: {{ include "apiclarity.name" . }}-istio-pre-install-job
    namespace: '{{ .Release.Namespace }}'
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "apiclarity.name" . }}-istio-pre-install-job
  namespace: '{{ .Release.Namespace }}'
  labels:
    {{ include "apiclarity.labels" . }}
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
spec:
  backoffLimit: 0
  template:
    metadata:
      name: {{ include "apiclarity.name" . }}-istio-pre-install-job
    spec:
      serviceAccountName: {{ include "apiclarity.name" . }}-istio-pre-install-job
      containers:
        - name: istioctl
          image: "istio/istioctl:1.10.5"
          imagePullPolicy: "IfNotPresent"
          command:
          - /bin/bash
          - -c
          - "istioctl verify-install 2>/dev/null | grep -c 'Istio control planes detected'"
      restartPolicy: Never
{{- end }}
{{- end }}
