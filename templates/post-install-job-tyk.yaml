{{- if .Values.trafficSource.tyk.enabled }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "apiclarity.name" . }}-tyk-post-install-job
  labels:
    {{ include "apiclarity.labels" . }}
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
rules:
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets", "daemonsets"]
  verbs: ["get", "list", "create", "patch"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "create", "delete"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "apiclarity.name" . }}-tyk-post-install-job
  namespace: '{{ .Release.Namespace }}'
  labels:
    {{ include "apiclarity.labels" . }}
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "apiclarity.name" . }}-tyk-post-install-job
  labels:
    {{ include "apiclarity.labels" . }}
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "apiclarity.name" . }}-tyk-post-install-job
subjects:
  - kind: ServiceAccount
    name: {{ include "apiclarity.name" . }}-tyk-post-install-job
    namespace: '{{ .Release.Namespace }}'
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "apiclarity.name" . }}-tyk-post-install-job
  namespace: '{{ .Release.Namespace }}'
  labels:
    {{ include "apiclarity.labels" . }}
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
spec:
  backoffLimit: 3
  template:
    metadata:
      name: {{ include "apiclarity.name" . }}-tyk-post-install-job
    spec:
      serviceAccountName: {{ include "apiclarity.name" . }}-tyk-post-install-job
      containers:
        - name: kubectl
          image: "k8s.gcr.io/hyperkube:v1.16.12"
          imagePullPolicy: "IfNotPresent"
          env:
            - name: TYK_PROXY_CONTAINER_NAME
              value: {{ .Values.trafficSource.tyk.containerName }}
            - name: TYK_GATEWAY_DEPLOYMENT_NAME
              value: {{ .Values.trafficSource.tyk.deploymentName }}
            - name: TYK_GATEWAY_DEPLOYMENT_NAMESPACE
              value: {{ .Values.trafficSource.tyk.deploymentNamespace }}
            - name: UPSTREAM_TELEMETRY_HOST_NAME
              value: '{{ include "apiclarity.name" . }}.{{ .Release.Namespace }}'
            - name: TRACE_SAMPLING_HOST_NAME
              value: '{{ include "apiclarity.name" . }}.{{ .Release.Namespace }}:9990'
            - name: TRACE_SAMPLING_ENABLED
              value: "{{ .Values.global.traceSampling.enable }}"
            {{- if .Values.apiclarity.tls.enabled }}
            - name: ENABLE_TLS
              value: "{{ .Values.apiclarity.tls.enabled }}"
            - name: ROOT_CERT_CONFIGMAP_NAME
              value: {{ .Values.apiclarity.tls.rootCACertConfigMapName }}
            - name: ROOT_CERT_CONFIGMAP_NAMESPACE
              value: '{{ .Release.Namespace }}'
            - name: ROOT_CERT_FILE_NAME
              value: {{ .Values.apiclarity.tls.rootCertFileName }}
            {{- end }}
          command:
          - /bin/bash
          - -c
          - "cd /tmp &&
{{- if .Values.trafficSource.global.httpsProxy }}
            git config --global https.proxy {{ .Values.trafficSource.global.httpsProxy }} &&
{{- end }}
{{- if .Values.trafficSource.global.httpProxy }}
            git config --global http.proxy {{ .Values.trafficSource.global.httpProxy }} &&
{{- end }}
            git clone -b {{ .Chart.AppVersion }} https://github.com/openclarity/apiclarity.git &&
            cd apiclarity &&
            ./plugins/gateway/tyk/deploy/deploy.sh"
      restartPolicy: Never
{{- end }}
